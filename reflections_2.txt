7) What happens when you initialize a repository? Why do you need to do it?

The git program creates a file that records all the commits recorded in the repo from that point on.
Unless the repo is initialized, you just have a normal folder.

8) How is the staging area different from the working directory and the repository? What value do you think it offers?

Staging area allows for changes to be tracked without being committed. It allows us a chance to stop tracking a file if we choose not to commit.

9) How can you use the staging area to make sure you have one commit per logical change?

By only committing one file that has been altered at a time. In the case of multiple files being linked to one logical change, more than 1 file can be committed from the staging area.

10) What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When new features are being created in an app (features which perhaps don't have any interdependencies). Branches would allow these features to be developed independently and by several different developers without creating too many clashes or confusion.

11) How do the diagrams help you visualize the branch structure?

It helps to see where new branches were changed and how many different features have been added to the other branches since then.
ie it helps to guage how different each branch is
Lets us see how many different features there are, how diverse and complex the code base has become

